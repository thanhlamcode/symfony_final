services:
###> doctrine/doctrine-bundle ###
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    restart: unless-stopped
    working_dir: /var/www
    environment:
      - CORS_ALLOW_ORIGIN=^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$
    volumes:
      - ./:/var/www
    networks:
      - symfony_network

  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - symfony_network

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: symfony_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - symfony_network
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
  # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
  # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  symfony_network:
    driver: bridge
